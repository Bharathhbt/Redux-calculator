{"ast":null,"code":"var _jsxFileName = \"/home/bharath/Documents/reactjs/reduxcalci/src/components/Buttons.js\";\nimport React from 'react';\nimport './Buttons.css';\nimport { connect } from 'react-redux';\nimport { Button, Input, TextArea } from '@material-ui/core';\nimport { onAllClear, onBackSpace, onClear, onEqual, buttonClicked } from '../actions/actionss';\n\nclass Buttons extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Forms\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"display\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(TextArea, {\n      type: \"text\",\n      id: \"input\",\n      name: \"input\",\n      value: this.props.result,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"Buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      onClick: () => this.props.onAllClear(\"clear-all\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \" AC \"), React.createElement(Button, {\n      variant: \"contained\",\n      onClick: () => this.props.onClear(\" \"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"C\"), React.createElement(Button, {\n      variant: \"contained\",\n      onClick: () => this.props.onBackSpace(\"backspace\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"BCK\"), React.createElement(Button, {\n      variant: \"contained\",\n      onClick: () => this.props.buttonClicked(\"%\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"%\"), React.createElement(Button, {\n      variant: \"contained\",\n      onClick: () => this.props.buttonClicked(\"7\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"7\"), React.createElement(Button, {\n      variant: \"contained\",\n      onClick: () => this.props.buttonClicked(\"8\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"8\"), React.createElement(Button, {\n      variant: \"contained\",\n      onClick: () => this.props.buttonClicked(\"9\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"9\"), React.createElement(Button, {\n      variant: \"contained\",\n      onClick: () => this.props.buttonClicked(\"*\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"*\"), React.createElement(Button, {\n      variant: \"contained\",\n      onClick: () => this.props.buttonClicked(\"4\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"4\"), React.createElement(Button, {\n      variant: \"contained\",\n      onClick: () => this.props.buttonClicked(\"5\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"5\"), React.createElement(Button, {\n      variant: \"contained\",\n      onClick: () => this.props.buttonClicked(\"6\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"6\"), React.createElement(Button, {\n      variant: \"contained\",\n      onClick: () => this.props.buttonClicked(\"-\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"-\"), React.createElement(Button, {\n      variant: \"contained\",\n      onClick: () => this.props.buttonClicked(\"1\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"1\"), React.createElement(Button, {\n      variant: \"contained\",\n      onClick: () => this.props.buttonClicked(\"2\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"2\"), React.createElement(Button, {\n      variant: \"contained\",\n      onClick: () => this.props.buttonClicked(\"3\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"3\"), React.createElement(Button, {\n      variant: \"contained\",\n      onClick: () => this.props.buttonClicked(\"+\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"+\"), React.createElement(Button, {\n      variant: \"contained\",\n      onClick: () => this.props.buttonClicked(\"0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"0\"), React.createElement(Button, {\n      variant: \"contained\",\n      onClick: () => this.props.buttonClicked(\".\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \".\"), React.createElement(Button, {\n      variant: \"contained\",\n      onClick: () => this.props.onEqual(\"=\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"=\"), React.createElement(Button, {\n      variant: \"contained\",\n      onClick: () => this.props.buttonClicked(\"/\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"/\")));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  result: state.result,\n  history: state.history,\n  formula: state.formula,\n  isShowHistory: state.isShowHistory\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onAllClear: aclr => dispatch(onAllClear(aclr)),\n  onBackSpace: bck => dispatch(onBackSpace(bck)),\n  onClear: clr => dispatch(onClear(clr)),\n  onEqual: eql => dispatch(onEqual(eql)),\n  buttonClicked: val => dispatch(buttonClicked(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Buttons);","map":{"version":3,"sources":["/home/bharath/Documents/reactjs/reduxcalci/src/components/Buttons.js"],"names":["React","connect","Button","Input","TextArea","onAllClear","onBackSpace","onClear","onEqual","buttonClicked","Buttons","Component","render","props","result","mapStateToProps","state","history","formula","isShowHistory","mapDispatchToProps","dispatch","aclr","bck","clr","eql","val"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Buttons.css';\nimport { connect } from 'react-redux'\nimport { Button, Input,TextArea } from '@material-ui/core';\nimport {onAllClear,onBackSpace,onClear,onEqual,buttonClicked} from '../actions/actionss';\n\n\nclass Buttons extends React.Component {\n    \n\n  render() {\n    \n    return (\n    <div className=\"Forms\">\n        <form className=\"display\">       \n             <TextArea type=\"text\" id=\"input\" name=\"input\" value={this.props.result} />\n        </form>\n\n        <div className=\"Buttons\">\n                \n                <Button  variant=\"contained\"   onClick={() => this.props.onAllClear(\"clear-all\")} > AC </Button>\n                <Button  variant=\"contained\"   onClick={() => this.props.onClear(\" \")} >C</Button>\n                <Button  variant=\"contained\"   onClick={() => this.props.onBackSpace(\"backspace\")}>BCK</Button>\n                <Button  variant=\"contained\"   onClick={() => this.props.buttonClicked(\"%\")} >%</Button>\n            \n                \n                <Button  variant=\"contained\"   onClick={() => this.props.buttonClicked(\"7\")} >7</Button>\n                <Button  variant=\"contained\"   onClick={() => this.props.buttonClicked(\"8\")} >8</Button>\n                <Button  variant=\"contained\"   onClick={() => this.props.buttonClicked(\"9\")} >9</Button>\n                <Button  variant=\"contained\"   onClick={() => this.props.buttonClicked(\"*\")} >*</Button>\n           \n                <Button  variant=\"contained\"   onClick={() => this.props.buttonClicked(\"4\")} >4</Button>\n                <Button  variant=\"contained\"   onClick={() => this.props.buttonClicked(\"5\")} >5</Button>\n                <Button  variant=\"contained\"   onClick={() => this.props.buttonClicked(\"6\")} >6</Button>\n                <Button  variant=\"contained\"   onClick={() => this.props.buttonClicked(\"-\")} >-</Button>\n           \n                \n                <Button  variant=\"contained\"   onClick={() => this.props.buttonClicked(\"1\")} >1</Button>\n                <Button  variant=\"contained\"   onClick={() => this.props.buttonClicked(\"2\")} >2</Button>\n                <Button  variant=\"contained\"   onClick={() => this.props.buttonClicked(\"3\")} >3</Button>\n                <Button  variant=\"contained\"   onClick={() => this.props.buttonClicked(\"+\")} >+</Button>\n            \n                \n                <Button  variant=\"contained\"   onClick={() => this.props.buttonClicked(\"0\")} >0</Button>\n                <Button  variant=\"contained\"   onClick={() => this.props.buttonClicked(\".\")} >.</Button>\n                <Button  variant=\"contained\"   onClick={() => this.props.onEqual(\"=\")} >=</Button>\n                <Button  variant=\"contained\"   onClick={() => this.props.buttonClicked(\"/\")} >/</Button>\n            </div>\n      \n        \n\n\n        \n    </div>\n    )\n  }\n}\nconst mapStateToProps = (state) => ({\n      result: state.result,\n      history: state.history,\n      formula: state.formula,\n      isShowHistory: state.isShowHistory\n    \n\n})\n\nconst mapDispatchToProps = dispatch => ({\n    onAllClear: (aclr) => dispatch(onAllClear(aclr)),\n    onBackSpace: (bck) => dispatch(onBackSpace(bck)),\n    onClear: (clr) => dispatch(onClear(clr)),\n    onEqual: (eql) => dispatch(onEqual(eql)),\n    buttonClicked: (val) => dispatch(buttonClicked(val))\n});\n\nexport default connect(\n    mapStateToProps,mapDispatchToProps,\n)(Buttons);\n"]},"metadata":{},"sourceType":"module"}