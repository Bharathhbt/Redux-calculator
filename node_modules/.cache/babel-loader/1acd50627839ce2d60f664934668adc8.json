{"ast":null,"code":"var _jsxFileName = \"/home/bharath/Documents/reactjs/reduxcalci/src/components/Buttons.js\";\nimport React from 'react';\nimport './Buttons.css';\nimport { connect } from 'react-redux';\nimport { Button } from '@material-ui/core';\nimport { onAllClear, onBackSpace, onClear, onEqual, buttonClicked, onHistory } from '../actions/actionss';\nimport History from './History';\n\nclass Buttons extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"display\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"display\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      type: \"text\",\n      id: \"input\",\n      name: \"input\",\n      value: this.props.result,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"toolbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"toolbar-item\",\n      id: \"view-history\",\n      onClick: this.props.onHistory,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, this.props.isShowHistory ? \"Keypad\" : \"History\")), this.props.isShowHistory ? React.createElement(History, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      className: \"Buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      disableRipple: true,\n      onClick: () => this.props.onAllClear(\"clear-all\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \" AC \"), React.createElement(Button, {\n      variant: \"contained\",\n      disableRipple: true,\n      onClick: () => this.props.onClear(\" \"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"C\"), React.createElement(Button, {\n      variant: \"contained\",\n      disableRipple: true,\n      onClick: () => this.props.onBackSpace(\"backspace\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"BCK\"), React.createElement(Button, {\n      variant: \"contained\",\n      disableRipple: true,\n      onClick: () => this.props.buttonClicked(\"%\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"%\"), React.createElement(Button, {\n      variant: \"contained\",\n      disableRipple: true,\n      onClick: () => this.props.buttonClicked(\"7\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"7\"), React.createElement(Button, {\n      variant: \"contained\",\n      disableRipple: true,\n      onClick: () => this.props.buttonClicked(\"8\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"8\"), React.createElement(Button, {\n      variant: \"contained\",\n      disableRipple: true,\n      onClick: () => this.props.buttonClicked(\"9\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"9\"), React.createElement(Button, {\n      variant: \"contained\",\n      disableRipple: true,\n      onClick: () => this.props.buttonClicked(\"*\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"*\"), React.createElement(Button, {\n      variant: \"contained\",\n      disableRipple: true,\n      onClick: () => this.props.buttonClicked(\"4\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"4\"), React.createElement(Button, {\n      variant: \"contained\",\n      disableRipple: true,\n      onClick: () => this.props.buttonClicked(\"5\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"5\"), React.createElement(Button, {\n      variant: \"contained\",\n      disableRipple: true,\n      onClick: () => this.props.buttonClicked(\"6\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"6\"), React.createElement(Button, {\n      variant: \"contained\",\n      disableRipple: true,\n      onClick: () => this.props.buttonClicked(\"-\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"-\"), React.createElement(Button, {\n      variant: \"contained\",\n      disableRipple: true,\n      onClick: () => this.props.buttonClicked(\"1\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"1\"), React.createElement(Button, {\n      variant: \"contained\",\n      disableRipple: true,\n      onClick: () => this.props.buttonClicked(\"2\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"2\"), React.createElement(Button, {\n      variant: \"contained\",\n      disableRipple: true,\n      onClick: () => this.props.buttonClicked(\"3\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"3\"), React.createElement(Button, {\n      variant: \"contained\",\n      disableRipple: true,\n      onClick: () => this.props.buttonClicked(\"+\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"+\"), React.createElement(Button, {\n      variant: \"contained\",\n      disableRipple: true,\n      onClick: () => this.props.buttonClicked(\"0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"0\"), React.createElement(Button, {\n      variant: \"contained\",\n      disableRipple: true,\n      onClick: () => this.props.buttonClicked(\".\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \".\"), React.createElement(Button, {\n      variant: \"contained\",\n      disableRipple: true,\n      onClick: () => this.props.onEqual(\"=\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"=\"), React.createElement(Button, {\n      variant: \"contained\",\n      disableRipple: true,\n      onClick: () => this.props.buttonClicked(\"/\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"/\")));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  result: state.result,\n  history: state.history,\n  formula: state.formula,\n  isShowHistory: state.isShowHistory\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onAllClear: aclr => dispatch(onAllClear(aclr)),\n  onBackSpace: bck => dispatch(onBackSpace(bck)),\n  onClear: clr => dispatch(onClear(clr)),\n  onEqual: eql => dispatch(onEqual(eql)),\n  buttonClicked: val => dispatch(buttonClicked(val)),\n  onHistory: () => dispatch(onHistory())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Buttons);","map":{"version":3,"sources":["/home/bharath/Documents/reactjs/reduxcalci/src/components/Buttons.js"],"names":["React","connect","Button","onAllClear","onBackSpace","onClear","onEqual","buttonClicked","onHistory","History","Buttons","Component","render","props","result","isShowHistory","mapStateToProps","state","history","formula","mapDispatchToProps","dispatch","aclr","bck","clr","eql","val"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Buttons.css';\nimport { connect } from 'react-redux'\nimport { Button } from '@material-ui/core';\nimport {onAllClear,onBackSpace,onClear,onEqual,buttonClicked,onHistory} from '../actions/actionss';\nimport History from './History'\n\nclass Buttons extends React.Component {\n    \n\n  render() {\n    \n    return (\n    <div className=\"display\">\n        <form className=\"display\">       \n             <textarea type=\"text\" id=\"input\" name=\"input\" value={this.props.result} />\n        </form>\n        <div className=\"toolbar\">\n          <div className=\"toolbar-item\" id=\"view-history\" onClick={this.props.onHistory}>{this.props.isShowHistory ? \"Keypad\" : \"History\"}</div>\n          \n        </div>\n        {\n            this.props.isShowHistory\n            ? <History/>\n        \n         :  <div className=\"Buttons\">\n                \n                <Button  variant=\"contained\" disableRipple   onClick={() => this.props.onAllClear(\"clear-all\")} > AC </Button>\n                <Button  variant=\"contained\" disableRipple   onClick={() => this.props.onClear(\" \")} >C</Button>\n                <Button  variant=\"contained\" disableRipple   onClick={() => this.props.onBackSpace(\"backspace\")}>BCK</Button>\n                <Button  variant=\"contained\" disableRipple   onClick={() => this.props.buttonClicked(\"%\")} >%</Button>\n            \n                \n                <Button  variant=\"contained\" disableRipple   onClick={() => this.props.buttonClicked(\"7\")} >7</Button>\n                <Button  variant=\"contained\" disableRipple   onClick={() => this.props.buttonClicked(\"8\")} >8</Button>\n                <Button  variant=\"contained\" disableRipple   onClick={() => this.props.buttonClicked(\"9\")} >9</Button>\n                <Button  variant=\"contained\" disableRipple   onClick={() => this.props.buttonClicked(\"*\")} >*</Button>\n           \n                <Button  variant=\"contained\" disableRipple   onClick={() => this.props.buttonClicked(\"4\")} >4</Button>\n                <Button  variant=\"contained\" disableRipple   onClick={() => this.props.buttonClicked(\"5\")} >5</Button>\n                <Button  variant=\"contained\" disableRipple   onClick={() => this.props.buttonClicked(\"6\")} >6</Button>\n                <Button  variant=\"contained\" disableRipple   onClick={() => this.props.buttonClicked(\"-\")} >-</Button>\n           \n                \n                <Button  variant=\"contained\" disableRipple   onClick={() => this.props.buttonClicked(\"1\")} >1</Button>\n                <Button  variant=\"contained\" disableRipple   onClick={() => this.props.buttonClicked(\"2\")} >2</Button>\n                <Button  variant=\"contained\" disableRipple   onClick={() => this.props.buttonClicked(\"3\")} >3</Button>\n                <Button  variant=\"contained\" disableRipple   onClick={() => this.props.buttonClicked(\"+\")} >+</Button>\n            \n                \n                <Button  variant=\"contained\" disableRipple   onClick={() => this.props.buttonClicked(\"0\")} >0</Button>\n                <Button  variant=\"contained\" disableRipple   onClick={() => this.props.buttonClicked(\".\")} >.</Button>\n                <Button  variant=\"contained\" disableRipple   onClick={() => this.props.onEqual(\"=\")} >=</Button>\n                <Button  variant=\"contained\" disableRipple   onClick={() => this.props.buttonClicked(\"/\")} >/</Button>\n            </div>\n            \n  }\n\n\n        \n    </div>\n    )\n  }\n}\nconst mapStateToProps = (state) => ({\n      result: state.result,\n      history: state.history,\n      formula: state.formula,\n      isShowHistory: state.isShowHistory\n    \n\n})\n\nconst mapDispatchToProps = dispatch => ({\n    onAllClear: (aclr) => dispatch(onAllClear(aclr)),\n    onBackSpace: (bck) => dispatch(onBackSpace(bck)),\n    onClear: (clr) => dispatch(onClear(clr)),\n    onEqual: (eql) => dispatch(onEqual(eql)),\n    buttonClicked: (val) => dispatch(buttonClicked(val)),\n    onHistory: () => dispatch(onHistory())\n});\n\nexport default connect(\n    mapStateToProps,mapDispatchToProps,\n)(Buttons);\n"]},"metadata":{},"sourceType":"module"}